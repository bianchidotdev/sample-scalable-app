name: deploy

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: michaeldbianchi/express-app

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: brpaz/hadolint-action@v1.2.1
        with:
          dockerfile: Dockerfile
  build-and-push:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
  
      - name: Build and Upload Image
        env:
          DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_REGISTRY_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        run: |
          timestamp=$(date +"%Y%m%d%H%M")
          docker login -u $DOCKER_REGISTRY_USERNAME -p $DOCKER_REGISTRY_ACCESS_TOKEN
          docker pull $IMAGE_NAME || echo "Failed to pull $IMAGE_NAME image - Building from scratch"
          docker build --cache-from $IMAGE_NAME -t $IMAGE_NAME:${GITHUB_SHA::7} -t $IMAGE_NAME:$timestamp -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME 
            
  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-push]
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          # tfenv
          git clone https://github.com/tfutils/tfenv.git ~/.tfenv
          export PATH="$HOME/.tfenv/bin:$PATH"	
          echo "$HOME/.tfenv/bin" >> $GITHUB_PATH
          tfenv install
          tfenv use
          terraform version

          # eksctl
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin
          eksctl version

      - name: Validate dependencies
        run: ./bin/check-deps.sh

      - name: Setup cluster
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: ./bin/setup-cluster.sh

      - name: Trigger app deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: ./bin/trigger-app-update.sh express-app
